# 这是用于构建混合 C++ (MSVC v143) 和 C# (.NET Framework) 项目的 GitHub Actions 工作流程
# 构建 Release Win32, x64, ARM64 配置，并按要求打包上传 Inkeys.exe

name: Inkeys Build

on:
  push:
    branches:
      - dev
      # - main
      # - insider # 在 main 和 insider 分支 push 时触发

# 定义一个矩阵策略来构建不同的平台
jobs:
  build:
    strategy:
      matrix:
        platform: [Win32, x64, ARM64]
      # Optional: fail-fast: false 可以让一个平台的构建失败时不立即取消其他平台的构建
      # fail-fast: false

    runs-on: windows-latest

    # 步骤1: 拉取代码
    steps:
    - name: Checkout code 
      uses: actions/checkout@v4

    # 步骤2: 设置环境并构建智绘教.vcxproj
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup .NET Framework 4.0
      shell: pwsh
      run: |
        $zipPath = ".\ActionsRes\v4.0.zip"
        $tempPath = ".\temp"
        $targetParent = "C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework"
        # 解压 zip 到临时目录
        Expand-Archive -Path $zipPath -DestinationPath $tempPath
        # 创建目标父目录（如果不存在）
        if (!(Test-Path $targetParent)) {
          New-Item -Path $targetParent -ItemType Directory | Out-Null
        }
        # 拷贝整个 v4.0 文件夹到目标父目录下
        Copy-Item -Path "$tempPath\v4.0" -Destination $targetParent -Recurse -Force

    - name: Build PptCOM.csproj
      run: msbuild "PptCOM\PptCOM.csproj" /p:Configuration=Release /p:Platform="Any CPU" /verbosity:minimal
      shell: cmd
    - name: Build 智绘教.vcxproj
      run: msbuild "智绘教\智绘教.vcxproj" /p:Configuration=Release /p:Platform=${{ matrix.platform }} /verbosity:minimal
      shell: cmd

    # 步骤3: 打包并压缩产物
    - name: Determine exe path and artifact name
      id: exeinfo
      shell: pwsh
      run: |
        $platform = "${{ matrix.platform }}"
        if ($platform -eq "Win32") {
          $exe = ".\Release\Inkeys.exe"
          $name = "Inkeys"
        } elseif ($platform -eq "x64") {
          $exe = ".\x64\Release\Inkeys.exe"
          $name = "Inkeys64"
        } elseif ($platform -eq "ARM64") {
          $exe = ".\ARM64\Release\Inkeys.exe"
          $name = "InkeysArm64"
        } else {
          Write-Error "Unsupported platform: $platform"
          exit 1
        }
        if (-not (Test-Path $exe -PathType Leaf)) {
          Write-Error "$exe not found"
          exit 1
        }
        echo "exe_path=$exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "artifact_name=$name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    # 步骤4: 上传打包好的 Artifact (zip 文件)
    - name: Upload artifact - ${{ matrix.platform }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact_name }}
        path: ${{ env.exe_path }}
