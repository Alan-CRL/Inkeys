# 这是用于构建混合 C++ (MSVC v143) 和 C# (.NET Framework) 项目的 GitHub Actions 工作流程

name: Inkeys Build

on:
  push:
    branches:
      - dev
      - main
      - insider # 在 main 和 insider 分支 push 时触发
permissions:
  actions: write

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for '#define IDT_RELEASE'
        id: check_idt_release
        run: |
          FILE="智绘教/IdtMain.h"
          if ! grep -xq "#define IDT_RELEASE" "$FILE"; then
            echo "::warning file=$FILE::没有找到'#define IDT_RELEASE'（说明是非发布版本的错误推送），请检查！"
            exit 1
          fi

  build:
    name: Build
    needs: check
    strategy:
      matrix:
        platform: [Win32, x64, ARM64]
      fail-fast: false
    runs-on: windows-latest

    steps:
      # step 1
    - name: Checkout code 
      uses: actions/checkout@v4

    # step 2
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Setup .NET Framework 4.0
      shell: pwsh
      run: |
        $zipPath = ".\ActionsRes\v4.0.zip"
        $tempPath = ".\temp"
        $targetParent = "C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework"
        # 解压 zip 到临时目录
        Expand-Archive -Path $zipPath -DestinationPath $tempPath
        # 创建目标父目录（如果不存在）
        if (!(Test-Path $targetParent)) {
          New-Item -Path $targetParent -ItemType Directory | Out-Null
        }
        # 拷贝整个 v4.0 文件夹到目标父目录下
        Copy-Item -Path "$tempPath\v4.0" -Destination $targetParent -Recurse -Force
    - name: Restore NuGet packages
      run: nuget restore "智绘教.sln"

    - name: Build Inkeys
      run: msbuild "智绘教.sln" /p:Configuration=Release /p:Platform=${{ matrix.platform }} /verbosity:minimal
      shell: cmd

    # step 3
    - name: Upload exe[unsigned] artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform == 'Win32' && 'Inkeys[Unsigned]' || 
                  matrix.platform == 'x64' && 'Inkeys64[Unsigned]' || 
                  matrix.platform == 'ARM64' && 'InkeysArm64[Unsigned]' }}
        path: |
          ${{ (matrix.platform == 'Win32' && './Release/Inkeys.exe') || 
              (matrix.platform == 'x64' && './x64/Release/Inkeys.exe') || 
              (matrix.platform == 'ARM64' && './ARM64/Release/Inkeys.exe') }}
          ${{ (matrix.platform == 'Win32' && './Release/Inkeys.pdb') ||
              (matrix.platform == 'x64' && './x64/Release/Inkeys.pdb') ||
              (matrix.platform == 'ARM64' && './ARM64/Release/Inkeys.pdb') }}

  package:
    name: Package
    runs-on: windows-latest
    needs: build

    steps:
      - name: Download Inkeys[Unsigned]
        uses: actions/download-artifact@v4
        with:
          name: Inkeys[Unsigned]
          path: download/win32
      - name: Download Inkeys64[Unsigned]
        uses: actions/download-artifact@v4
        with:
          name: Inkeys64[Unsigned]
          path: download/x64
      - name: Download InkeysArm64[Unsigned]
        uses: actions/download-artifact@v4
        with:
          name: InkeysArm64[Unsigned]
          path: download/arm64

      - name: Prepare signpath zip folder
        run: |
          mkdir signatureUpload
          mkdir signedUpload
          mkdir packageUpload
          copy download\win32\Inkeys.exe signatureUpload\Inkeys.exe
          copy download\x64\Inkeys.exe signatureUpload\Inkeys64.exe
          copy download\arm64\Inkeys.exe signatureUpload\InkeysArm64.exe
          copy download\win32\Inkeys.pdb packageUpload\Inkeys.pdb
          copy download\x64\Inkeys.pdb packageUpload\Inkeys64.pdb
          copy download\arm64\Inkeys.pdb packageUpload\InkeysArm64.pdb
          
      - name: Upload Signpath[unsigned]
        id: upload-unsigned
        uses: actions/upload-artifact@v4
        with:
          name: Signpath[unsigned]
          path: signatureUpload/

      - name: Sign with SignPath
        id: signpath
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '95390269-627b-496d-8127-fc47de793284'
          project-slug: 'Inkeys'
          signing-policy-slug: 'release-signing'
          github-artifact-id: '${{ steps.upload-unsigned.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: './signed'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Prepare update folder
        run: |
          mkdir signedUpload\Inkeys
          mkdir signedUpload\Inkeys64
          mkdir signedUpload\InkeysArm64
          copy signed\Inkeys.exe signedUpload\Inkeys\Inkeys.exe
          copy signed\Inkeys64.exe signedUpload\Inkeys64\Inkeys.exe
          copy signed\InkeysArm64.exe signedUpload\InkeysArm64\Inkeys.exe

      - name: Upload Inkeys
        uses: actions/upload-artifact@v4
        with:
          name: Inkeys
          path: signedUpload\Inkeys\Inkeys.exe
      - name: Upload Inkeys64
        uses: actions/upload-artifact@v4
        with:
          name: Inkeys64
          path: signedUpload\Inkeys64\Inkeys.exe
      - name: Upload InkeysArm64
        uses: actions/upload-artifact@v4
        with:
          name: InkeysArm64
          path: signedUpload\InkeysArm64\Inkeys.exe

      # TEST
      - name: Print file tree
        run: tree /F /A
        shell: cmd

      - name: Clean Up
        shell: pwsh
        env:
          ARTIFACT_NAMES: 'Inkeys[Unsigned],Inkeys64[Unsigned],InkeysArm64[Unsigned],Signpath[unsigned]'
        run: |
          # 拆分目标 artifact 列表
          $names = "${env:ARTIFACT_NAMES}".Split(',')

          # 获取 artifact 元信息
          $repo = "${{ github.repository }}"
          $url = "https://api.github.com/repos/$repo/actions/artifacts?per_page=100"
          $headers = @{ Authorization = "Bearer ${{ secrets.GITHUB_TOKEN }}" }
          $response = Invoke-RestMethod -Uri $url -Headers $headers

          # 批量删除
          foreach ($name in $names) {
            $artifact = $response.artifacts | Where-Object { $_.name -eq $name }
            if ($null -ne $artifact) {
              Write-Host "Deleting artifact: $($artifact.name) $($artifact.id)"
              $delete_url = "https://api.github.com/repos/$repo/actions/artifacts/$($artifact.id)"
              Invoke-RestMethod -Uri $delete_url -Headers $headers -Method Delete
            } else {
              Write-Host "Not found: $name"
            }
          }

      - name: Compressed update package 1
        run: |
          Compress-Archive -Path .\signedUpload\Inkeys\Inkeys.exe -DestinationPath .\packageUpload\InkeysUpdate2025====!.zip -CompressionLevel Optimal
      - name: Compressed update package 2
        run: |
          Compress-Archive -Path .\signedUpload\Inkeys64\Inkeys.exe -DestinationPath .\packageUpload\InkeysUpdate2025====!64.zip -CompressionLevel Optimal
      - name: Compressed update package 3
        run: |
          Compress-Archive -Path .\signedUpload\InkeysArm64\Inkeys.exe -DestinationPath .\packageUpload\InkeysUpdate2025====!Arm64.zip -CompressionLevel Optimal

      # TEST
      # - name: Print file tree
      #   run: tree /F /A
      #   shell: cmd

      - name: Prepare configuration information 1
        shell: pwsh
        run: |
          $exeFile = 'signedUpload\Inkeys\Inkeys.exe'
          $uploadFile = 'packageUpload\InkeysUpdate2025====!.zip'
          $out = 'packageUpload\ci.txt'
          
          $md5    = ((Get-FileHash -Path $exeFile -Algorithm MD5   ).Hash).ToLower()
          $sha256 = ((Get-FileHash -Path $exeFile -Algorithm SHA256).Hash).ToLower()
          $size   = (Get-Item $uploadFile).Length

          "[Inkeys]`r`nMD5: $md5`r`nSHA256: $sha256`r`nZIP_SIZE: $size`r`n" | Add-Content $out -Encoding UTF8
      - name: Prepare configuration information 2
        shell: pwsh
        run: |
          $exeFile = 'signedUpload\Inkeys64\Inkeys.exe'
          $uploadFile = 'packageUpload\InkeysUpdate2025====!64.zip'
          $out = 'packageUpload\ci.txt'
          
          $md5    = ((Get-FileHash -Path $exeFile -Algorithm MD5   ).Hash).ToLower()
          $sha256 = ((Get-FileHash -Path $exeFile -Algorithm SHA256).Hash).ToLower()
          $size   = (Get-Item $uploadFile).Length

          "[Inkeys64]`r`nMD5: $md5`r`nSHA256: $sha256`r`nZIP_SIZE: $size`r`n" | Add-Content $out -Encoding UTF8
      - name: Prepare configuration information 3
        shell: pwsh
        run: |
          $exeFile = 'signedUpload\InkeysArm64\Inkeys.exe'
          $uploadFile = 'packageUpload\InkeysUpdate2025====!Arm64.zip'
          $out = 'packageUpload\ci.txt'
          
          $md5    = ((Get-FileHash -Path $exeFile -Algorithm MD5   ).Hash).ToLower()
          $sha256 = ((Get-FileHash -Path $exeFile -Algorithm SHA256).Hash).ToLower()
          $size   = (Get-Item $uploadFile).Length

          "[InkeysArm64]`r`nMD5: $md5`r`nSHA256: $sha256`r`nZIP_SIZE: $size`r`n" | Add-Content $out -Encoding UTF8
      
      # TEST
      # - name: Print file tree
      #   run: tree /F /A
      #   shell: cmd

      - name: Write Tips
        shell: pwsh
        run: |
          $content = @"
          软件使用方法：
          1. Inkeys.exe 运行文件放置于一个空的文件夹内（exe 名称不能包含非英文字符）
          2. 双击 Inkeys.exe 运行即可
          
          提示：
          设置桌面快捷方式和开机启动可以进软件选项界面中设置。
          有疑问吐槽建议等等，加Q群618720802一起讨论，或咨询作者QQ2685549821。
          
          -----
          
          How to use the software:
          1. Inkeys.exe runtime file is placed in an empty folder (exe name can not contain non-English characters)
          2. Double-click Inkeys.exe to run.
          
          Tips: 
          Set desktop shortcuts and boot up can be set into the software options interface.
          If you have any questions, comments, suggestions, etc., through the software feedback channel for feedback, or consult the author alan-crl@foxmail.com.
          "@

          Set-Content -Path "packageUpload\Tips.txt" -Value $content -Encoding UTF8
      - name: Prepare Tips
        run: |
          copy packageUpload\Tips.txt signedUpload\Inkeys\Tips.txt
          copy packageUpload\Tips.txt signedUpload\Inkeys64\Tips.txt
          copy packageUpload\Tips.txt signedUpload\InkeysArm64\Tips.txt

      - name: Compressed release package 1
        run: |
          Compress-Archive -Path .\signedUpload\Inkeys -DestinationPath ".\packageUpload\32=Inkeys2025====!.zip" -CompressionLevel Optimal
      - name: Compressed release package 2
        run: |
          Compress-Archive -Path .\signedUpload\Inkeys64 -DestinationPath ".\packageUpload\64=Inkeys2025====!.zip" -CompressionLevel Optimal
      - name: Compressed release package 3
        run: |
          Compress-Archive -Path .\signedUpload\InkeysArm64 -DestinationPath ".\packageUpload\Arm64=Inkeys2025====!.zip" -CompressionLevel Optimal

      # TEST
      - name: Print file tree
        run: tree /F /A
        shell: cmd

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: Package
          compression-level: 9
          path: packageUpload/