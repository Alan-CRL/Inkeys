# 这是用于构建混合 C++ (MSVC v143) 和 /*C# (.NET Framework)*/ 项目的 GitHub Actions 工作流程
# 构建 Release Win32, x64, ARM64 配置，并按要求打包上传 Inkeys.exe

name: Inkeys Build # 工作流程名称

on:
  push:
    branches:
      - dev
      # - main
      # - insider # 在 main 和 insider 分支 push 时触发

# 定义一个矩阵策略来构建不同的平台
jobs:
  build:
    # 使用矩阵定义需要构建的平台
    strategy:
      matrix:
        platform: [ARM64] # Win32, x64,  定义需要构建的平台列表。这些名称必须与你在 .sln 文件中定义的平台名称一致！
      # Optional: fail-fast: false 可以让一个平台的构建失败时不立即取消其他平台的构建
      # fail-fast: false

    runs-on: windows-latest # 在最新的 Windows 运行器上执行。这个环境通常预装了 Visual Studio (含 MSVC v143) 和 .NET Framework 构建工具。

    # 步骤1: 拉取代码
    steps:
    - name: Checkout code 
      uses: actions/checkout@v4 # 使用 actions/checkout@v4 Action

    # 步骤2: 设置环境并构建智绘教.vcxproj
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup .NET Framework 4.0
      shell: pwsh
      run: |
        $zipPath = ".\ActionsRes\v4.0.zip"
        $tempPath = ".\temp"
        $targetParent = "C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework"
        # 解压 zip 到临时目录
        Expand-Archive -Path $zipPath -DestinationPath $tempPath
        # 创建目标父目录（如果不存在）
        if (!(Test-Path $targetParent)) {
          New-Item -Path $targetParent -ItemType Directory | Out-Null
        }
        # 拷贝整个 v4.0 文件夹到目标父目录下
        Copy-Item -Path "$tempPath\v4.0" -Destination $targetParent -Recurse -Force

    - name: Build project - ${{ matrix.platform }} | Release
      run: msbuild "智绘教.sln" /p:Configuration=Release /p:Platform=${{ matrix.platform }} /verbosity:minimal
      shell: cmd

    